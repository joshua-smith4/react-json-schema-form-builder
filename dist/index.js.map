{"version":3,"file":"index.js","sources":["../src/formBuilder/checkbox/FBCheckbox.js","../src/formBuilder/FontAwesomeIcon.js","../src/formBuilder/Collapse/Collapse.js","../src/formBuilder/radio/FBRadioButton.js","../src/formBuilder/radio/FBRadioGroup.js","../src/formBuilder/Tooltip.js","../src/formBuilder/utils.js","../src/formBuilder/dependencies/DependencyWarning.js","../src/formBuilder/dependencies/CardSelector.js","../src/formBuilder/CardEnumOptions.js","../src/formBuilder/dependencies/ValueSelector.js","../src/formBuilder/dependencies/DependencyPossibility.js","../src/formBuilder/dependencies/DependencyField.js","../src/formBuilder/CardModal.js","../src/formBuilder/GeneralParameterInputs.js","../src/formBuilder/CardGeneralParameterInputs.js","../src/formBuilder/Add.js","../src/formBuilder/Card.js","../src/formBuilder/defaults/defaultInputs.js","../src/formBuilder/Section.js","../src/formBuilder/styles.js","../src/formBuilder/inputs/PlaceholderInput.js","../src/formBuilder/defaults/shortAnswerInputs.js","../src/formBuilder/defaults/longAnswerInputs.js","../src/formBuilder/defaults/numberInputs.js","../src/formBuilder/defaults/arrayInputs.js","../src/formBuilder/defaults/referenceInputs.js","../src/formBuilder/defaults/defaultFormInputs.js","../src/formBuilder/FormBuilder.js","../src/formBuilder/CardGallery.js","../src/formBuilder/PredefinedGallery.js"],"sourcesContent":["// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  onChangeValue: Function,\n  isChecked: boolean,\n  id?: string,\n  label?: string,\n  use?: string,\n  value?: string,\n  disabled?: boolean,\n  dataTest?: string,\n  labelClassName?: string,\n};\n\nexport default function FBCheckbox({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}: Props): Node {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId = potentialCheckboxId !== '' ? potentialCheckboxId : null;\n  return (\n    <div data-test='checkbox' className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type='checkbox'\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={disabled ? () => {} : onChangeValue}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className='checkbox-overlay'>\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon as FortAwesomeFontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type { Node } from 'react';\n\nexport default function FontAwesomeIcon({\n  className,\n  ...otherProps\n}: {\n  className?: string,\n  [string]: any,\n}): Node {\n  const props = Object.assign(\n    { className: classnames([className, 'fa']) },\n    otherProps,\n  );\n  return <FortAwesomeFontAwesomeIcon {...props} />;\n}\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { '.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& .toggle-collapse': {\n      fontSize: '2.3rem',\n      cursor: 'pointer',\n      marginLeft: '33px',\n      '& .fa-caret-right': {\n        marginRight: '9px',\n      },\n    },\n  },\n});\n\ntype Props = {\n  // Determines if the Collapse component is open\n  isOpen: boolean,\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: () => void,\n  // The title to display in the collapse header\n  title: Node,\n  // Anything to be rendered within the collapse\n  children: any,\n  // If true will gray out and disable */\n  disableToggle?: boolean,\n  className?: string,\n};\n\nexport default function Collapse(props: Props): Node {\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    },\n  );\n\n  return (\n    <div className={classes}>\n      <div className='d-flex'>\n        <span className='toggle-collapse'>\n          <FontAwesomeIcon\n            onClick={!props.disableToggle ? props.toggleCollapse : () => {}}\n            icon={props.isOpen ? faCaretDown : faCaretRight}\n          />\n        </span>\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport type { Node } from 'react';\n\ntype Props = {\n  label: Node,\n  value?: any,\n  name?: string,\n  checked?: boolean,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioButton(props: Props): Node {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const [id] = useState(`radio-${Math.floor(Math.random() * 1000000)}`);\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <div className={classes} key={value}>\n      <input\n        id={id}\n        type='radio'\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport type { Node } from 'react';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& .fb-radio-button': {\n      display: 'block',\n      '& input[type=\"radio\"]': {\n        marginRight: '5px',\n        marginBottom: 0,\n        height: '1em',\n        verticalAlign: 'middle',\n      },\n      '& input[type=\"radio\"] + label': {\n        marginTop: 0,\n        marginBottom: 0,\n        verticalAlign: 'middle',\n      },\n    },\n  },\n});\n\ntype Props = {\n  options: Array<{ label: Node, value: string | number }>,\n  defaultValue?: any,\n  horizontal?: boolean,\n  id?: string,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioGroup(props: Props): Node {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n  return (\n    <div id={id} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          id={id}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","// @flow\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport type { Node } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faAsterisk,\n  faQuestionCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst typeMap = {\n  alert: faAsterisk,\n  help: faQuestionCircle,\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: Node,\n  type: 'alert' | 'help',\n  id: string,\n}): Node {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span\n        style={{ textDecoration: 'underline', color: 'blue' }}\n        href='#'\n        id={id}\n      >\n        <FontAwesomeIcon icon={typeMap[type]} />\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement='top'\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport type { Node } from 'react';\nimport type {\n  CardBody,\n  CardProps,\n  ElementProps,\n  FormInput,\n  Mods,\n  ModalBody,\n  DataOptions,\n  DataType,\n} from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string): any {\n  if (!text) return {};\n  return JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any): string {\n  if (!obj) return '{}';\n  return JSON.stringify(obj);\n}\n\nexport function defaultDataProps(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: any } {\n  return allFormInputs[category].defaultDataSchema;\n}\n\nexport function defaultUiProps(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: any } {\n  return allFormInputs[category].defaultUiSchema;\n}\nexport function categoryType(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): DataType {\n  return allFormInputs[category].type;\n}\nexport function getCardBody(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): CardBody {\n  return (\n    (allFormInputs[category] && allFormInputs[category].cardBody) ||\n    (() => null)\n  );\n}\nexport function categoryToNameMap(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: string } {\n  const categoryNameMap = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(allFormInputs: { [string]: FormInput }): {\n  [string]: string,\n} {\n  const categoryHash = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type === 'null' ? '' : type};widget:${\n          match.widget || ''\n        };field:${match.field || ''};format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [string]: string },\n): string {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n  '$schema',\n  'meta',\n  'additionalProperties',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:options',\n  'ui:field',\n  'ui:placeholder',\n  'ui:column',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>,\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object')\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      )\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n    });\n\n  if (uischema && typeof uischema === 'object')\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      )\n        propDefined = true;\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach((grouping) => {\n                  if (grouping.properties)\n                    if (Object.keys(grouping.properties).includes(uiProperty))\n                      propDefined = true;\n                });\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties,\n                  ).includes(uiProperty)\n                )\n                  propDefined = true;\n              }\n            },\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty))\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`,\n        );\n    });\n\n  // check for unsupported property parameters\n  if (schema.properties)\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type,\n            )\n          )\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`,\n            );\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp))\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`,\n              );\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            )\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n\n            // check unsupported ui option\n            if (uiProp === 'ui:options')\n              Object.keys(uischema[parameter]['ui:options']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption))\n                    unsupportedFeatures.push(\n                      `UI Property: ui:options.${uiOption} for ${parameter}`,\n                    );\n                },\n              );\n          });\n        }\n      },\n    );\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  allFormInputs: { [string]: FormInput },\n): string[] {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  const widgets = [];\n  const fields = [];\n  const options = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget))\n        widgets.push(match.widget || ''); // || '' is redundant but here to appease flow\n      if (match.field && !fields.includes(match.field))\n        fields.push(match.field || ''); // || '' is redundant but here to appease flow\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions,\n      ),\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateDependencyElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n  useDefinitionDetails: boolean = true, // determines whether to use an element's definition details or not.\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]] &&\n      useDefinitionDetails === true\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions);\n    Object.keys(newElement.uiOptions).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n      }\n    });\n\n    newElement.dataOptions.category = getCardCategory(newElement, categoryHash);\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n}): Array<ElementProps> {\n  const { schema, uischema, definitionData, definitionUi, categoryHash } =\n    parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement = {};\n    let elementDetails =\n      element && typeof element === 'object'\n        ? (element: {\n            ...any,\n            $ref?: string,\n          })\n        : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      )\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`,\n        );\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...definitionData[pathArr[2]],\n          ...elementDetails,\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n    newElement.dataOptions = elementDetails;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement,\n        categoryHash,\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    const useDefinitionDetails = false;\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (\n                !elementDict[parameter] ||\n                (parameter !== parent &&\n                  Object.keys(elementDict[parameter]).length === 1 &&\n                  elementDict[parameter].dependents)\n              ) {\n                const newElement = generateDependencyElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                  useDefinitionDetails,\n                );\n                if (\n                  elementDict[parameter] &&\n                  elementDict[parameter].dependents\n                ) {\n                  newElement.dependents = elementDict[parameter].dependents;\n                }\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter,\n                );\n              }\n            },\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateDependencyElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            definitionData,\n            definitionUi,\n            categoryHash,\n            useDefinitionDetails,\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name] = newElement;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList);\n  return (cardPropList: Array<ElementProps>);\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any): number {\n  if (!schemaData.properties) return 0;\n  const elementDict = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter,\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = elementDict[parameter] || {};\n          elementCount += 1;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return (elementCount: number);\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    const title =\n      element.schema !== undefined && element.schema.title !== undefined\n        ? element.schema.title\n        : element.dataOptions.title;\n    const description =\n      element.schema !== undefined && element.schema.description !== undefined\n        ? element.schema.description\n        : element.dataOptions.description;\n\n    let returnElement = {\n      $ref: element.$ref,\n      title: title,\n      description: description,\n    };\n\n    const length = element?.schema?.required?.length;\n    if (length !== undefined && length > 0) {\n      returnElement = { ...returnElement, required: element.schema.required };\n    }\n    return returnElement;\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'allFormInputs',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n): { [string]: any, definitions?: { [string]: any }, ... } {\n  if (!elementArr) return {};\n  const newSchema = {};\n\n  const props = {};\n  const dependencies = {};\n  const elementDict = {};\n  const dependentElements = new Set([]);\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility) => {\n            const childrenComponents = {};\n            const requiredValues = [];\n            possibility.children.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child],\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents = {};\n        const requiredValues = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child],\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName))\n      props[element.name] = generateSchemaElementFromElement(element);\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any,\n): { [string]: any, definitions?: { [string]: any }, ... } {\n  if (!elementArr) return {};\n\n  const uiSchema = {};\n  const uiOrder = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]])\n        uiSchema[element.name] = definitions[pathArr[2]];\n    }\n    if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (\n      element.propType === 'section' &&\n      Object.keys(element.uischema).length > 0\n    ) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): ModalBody {\n  return (\n    (allFormInputs[category] && allFormInputs[category].modalBody) ||\n    (() => null)\n  );\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: Array<ElementProps>,\n  parameters: {\n    schema: { [string]: any, definitions?: { [string]: any }, ... },\n    uischema: { [string]: any, definitions?: { [string]: any }, ... },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n  },\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const newSchema = Object.assign(\n    { ...schema },\n    generateSchemaFromElementProps(elementArr),\n  );\n\n  const newUiSchema: {\n    [string]: any,\n    definitions?: { [string]: any },\n    ...\n  } = generateUiSchemaFromElementProps(elementArr, definitionUi);\n  if (uischema.definitions) {\n    newUiSchema.definitions = uischema.definitions;\n  }\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n  onChange(newSchema, newUiSchema);\n}\n\nexport const DEFAULT_INPUT_NAME = 'newInput';\n\n// ensure that each added block has a unique name\nfunction getIdFromElementsBlock(elements: Array<ElementProps>) {\n  const names = elements.map((element) => element.name);\n  const defaultNameLength = DEFAULT_INPUT_NAME.length;\n\n  return names.length > 0\n    ? Math.max(\n        ...names.map((name) => {\n          if (name.startsWith(DEFAULT_INPUT_NAME)) {\n            const index = name.substring(defaultNameLength, name.length);\n            const value = Number.parseInt(index);\n\n            if (!isNaN(value)) {\n              return value;\n            }\n          }\n\n          return 0;\n        }),\n      ) + 1\n    : 1;\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  mods?: Mods,\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n  const dataOptions = getNewElementDefaultDataOptions(i, mods);\n\n  const newElement = ({\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: dataOptions,\n    uiOptions: (mods && mods.newElementDefaultUiSchema) || {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n\n  const newElement = ({\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [string]: any },\n  uiSchemaData: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  hideKey?: boolean,\n  path: string,\n  cardOpenArray: Array<boolean>,\n  setCardOpenArray: (newArr: Array<boolean>) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n  Card: React.AbstractComponent<{ [string]: any }>,\n  Section: React.AbstractComponent<{ [string]: any }>,\n}): Node[] {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData));\n  const uischema = parse(stringify(uiSchemaData));\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map((elementProp, index) => {\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        allFormInputs,\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={Object.assign(\n            {\n              name: elementPropArr[index].name,\n              required: elementPropArr[index].required,\n              hideKey,\n              path: `${path}_${elementPropArr[index].name}`,\n              definitionData,\n              definitionUi,\n              neighborNames: elementPropArr[index].neighborNames,\n              dependents: elementPropArr[index].dependents,\n              dependent: elementPropArr[index].dependent,\n              parent: elementPropArr[index].parent,\n            },\n            elementPropArr[index].uiOptions,\n            elementPropArr[index].dataOptions,\n          )}\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps = {};\n            const newUiProps = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                mods,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          mods={mods}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [string]: any },\n            newUiSchema: { [string]: any },\n            newRef?: string,\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>,\n              value?: any,\n            }>,\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                mods,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          categoryHash={categoryHash}\n          mods={mods}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n    categoryHash: { [string]: string },\n  },\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: Array<ElementProps>,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  categoryHash: { [string]: string },\n) {\n  const updatedElementArr = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      );\n      const newUiSchema = Object.assign(\n        { ...element.uischema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newSchema = Object.assign(\n        { ...element.schema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  categoryHash: { [string]: string },\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// Member-wise subtraction of array2 from array1\nexport function subtractArray(\n  array1: Array<string>,\n  array2?: Array<string>,\n): Array<string> {\n  if (array2 === undefined || array2 === null) return array1;\n\n  const keys = array2.reduce((acc, curr) => {\n    acc[curr] = true;\n    return acc;\n  }, {});\n\n  return array1.filter((v) => !keys[v]);\n}\n\nexport function excludeKeys(\n  obj: { [string]: any },\n  keys: ?(string[]),\n): { [string]: any } {\n  if (!keys) return { ...obj };\n\n  const keysHash = keys.reduce((acc, curr) => {\n    acc[curr] = true;\n    return acc;\n  }, {});\n\n  return Object.keys(obj).reduce(\n    (acc, curr) => (keysHash[curr] ? acc : { ...acc, [curr]: obj[curr] }),\n    {},\n  );\n}\n\nexport function getNewElementDefaultDataOptions(\n  i: number,\n  mods?: Mods,\n): DataOptions {\n  if (mods && mods.newElementDefaultDataOptions !== undefined) {\n    const title = `${mods.newElementDefaultDataOptions.title} ${i}`;\n    return { ...mods.newElementDefaultDataOptions, ...{ title: title } };\n  } else {\n    return {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    };\n  }\n}\n\nexport function getRandomId(): string {\n  const chars = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  const numberOfChars = chars.length;\n  const randomIdLength = 50;\n\n  return Array.from({ length: randomIdLength })\n    .map(() => chars[Math.floor(Math.random() * numberOfChars)])\n    .join('');\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport type { Node } from 'react';\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: {\n  parameters: {\n    [string]: any,\n    name?: string,\n    dependents?: Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n    type?: string,\n    enum?: Array<string | number>,\n    neighborNames?: Array<string>,\n    schema?: string,\n  },\n}): Node {\n  const [elementId] = useState(getRandomId());\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    (parameters.dependents || []).forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val) => definedVals.add(val));\n    });\n    const undefinedVals = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val)) undefinedVals.push(val);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${elementId}_valuewarning`}\n            type='help'\n            text='Each possible value for a value-based dependency must be defined to work properly'\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val, index) => (\n            <li key={index}>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>,\n  chosenChoices: Array<string>,\n  onChange: (chosenChoices: Array<string>) => void,\n  placeholder: string,\n  path: string,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${elementId}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className='card-modal-select'\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  cardEnumOption: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '.5em',\n    '& input': { width: '80%', marginRight: '1em', marginBottom: 0 },\n    '& .delete-button': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n});\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: {\n  initialValues: Array<any>,\n  names?: Array<string>,\n  showNames: boolean,\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void,\n  type: string,\n}): Node {\n  const classes = useStyles();\n\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className={classes.cardEnumOption}>\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder='Possible Value'\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                if (Number.isNaN(newVal)) newVal = type === 'string' ? '' : 0;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names,\n            );\n          }}\n          className='card-text'\n        />\n        <Input\n          value={name || ''}\n          placeholder='Label'\n          key={`name-${index}`}\n          type='text'\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className='card-text'\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <div className='delete-button'>\n          <FontAwesomeIcon\n            icon={faTimes}\n            onClick={() => {\n              // remove this value\n              onChange(\n                [\n                  ...initialValues.slice(0, index),\n                  ...initialValues.slice(index + 1),\n                ],\n                names\n                  ? [...names.slice(0, index), ...names.slice(index + 1)]\n                  : undefined,\n              );\n            }}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {possibleValues}\n      <FontAwesomeIcon\n        icon={faPlus}\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, type === 'string' ? '' : 0],\n            names ? [...names, ''] : undefined,\n          );\n        }}\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>,\n    value: any,\n  },\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: any,\n  path: string,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr = (possibility.value.enum: Array<any>);\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${elementId}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val = combination[key];\n                return (\n                  <div key={key}>\n                    <h5>{key}:</h5>\n                    {\n                      {\n                        string: (\n                          <Input\n                            value={val || ''}\n                            placeholder='String value'\n                            type='string'\n                            onChange={(ev: any) => {\n                              const newVal = ev.target.value;\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                        number: (\n                          <Input\n                            value={val || ''}\n                            placeholder='Number value'\n                            type='number'\n                            onChange={(ev: any) => {\n                              const newVal = Number.parseFloat(ev.target.value);\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-number'\n                          />\n                        ),\n                        array: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder='Array in JSON'\n                            type='string'\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON array input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                        object: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder='Object in JSON'\n                            type='string'\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON object input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                      }[typeof val]\n                    }\n                  </div>\n                );\n              })}\n              <FontAwesomeIcon\n                icon={faTimes}\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newCase = {};\n              const propArr = parentSchema ? parentSchema.properties : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>,\n    value?: any,\n  },\n  neighborNames: Array<string>,\n  path: string,\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  onDelete: () => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: any,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div className='form-dependency-condition'>\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${elementId}_bulk`}\n          type='help'\n          text='Choose the other form elements that depend on this one'\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder='Choose a dependent...'\n        path={path}\n      />\n      <h5>\n        If \"{parentName}\" has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'block' : 'none' }}>\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>,\n            value?: any,\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <FontAwesomeIcon icon={faTimes} onClick={() => onDelete()} />\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& .fa': { cursor: 'pointer' },\n    '& .plus': { marginLeft: '1em' },\n    '& h4': { marginBottom: '.5em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [string]: any,\n  name?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  type?: string,\n  enum?: Array<string | number>,\n  neighborNames?: Array<string>,\n  schema?: any,\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams,\n  onChange: (newParams: DependencyParams) => void,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h4>\n        Dependencies{' '}\n        <Tooltip\n          id={`${elementId}_dependent`}\n          type='help'\n          text='Control whether other form elements show based on this one'\n        />\n      </h4>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: (\n                  <React.Fragment>\n                    Specific value dependency{' '}\n                    <Tooltip\n                      id={`${elementId}_valuebased`}\n                      type='help'\n                      text=\"Specify whether these elements should show based on this element's value\"\n                    />\n                  </React.Fragment>\n                ),\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className='form-dependency-conditions'>\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${elementId}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>,\n                  value?: any,\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <span className='plus' id={`${elementId}_adddependency`}>\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newDependents = parameters.dependents\n                ? [...parameters.dependents]\n                : [];\n              newDependents.push({\n                children: [],\n                value: valueBased ? { enum: [] } : undefined,\n              });\n              onChange({\n                ...parameters,\n                dependents: newDependents,\n              });\n            }}\n          />\n        </span>\n        <UncontrolledTooltip\n          placement='top'\n          target={`${elementId}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n  Input,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { Node } from 'react';\nimport type { Parameters } from './types';\nimport Tooltip from './Tooltip';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-header': { paddingTop: '.5em', paddingBottom: '.5em' },\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { marginTop: '.5em', marginBottom: '.5em' },\n    '& h5, p, label, li': { fontSize: '14px' },\n    '& h4': { fontSize: '16px' },\n    '& h3': { fontSize: '18px', marginBottom: 0 },\n    '& .card-modal-entries > div > input': {\n      marginBottom: '1em',\n      height: '32px',\n    },\n    '& .fa-question-circle, & .fa-circle-question': { color: 'gray' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nexport default function CardModal({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}: {\n  componentProps: {\n    [string]: any,\n  },\n  onChange: (any) => void,\n  isOpen: boolean,\n  onClose: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n}): Node {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] =\n    React.useState(componentProps);\n\n  React.useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n  return (\n    <Modal isOpen={isOpen} data-test='card-modal' className={classes.cardModal}>\n      <ModalHeader className='card-modal-header'>\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h3>Additional Settings</h3>\n        </div>\n      </ModalHeader>\n      <ModalBody className='card-modal-entries'>\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <div>\n          <h4>\n            Column Size{' '}\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Tooltip\n                id='column_size_tooltip'\n                type='help'\n                text='Set the column size of the input'\n              />\n            </a>\n          </h4>\n          <Input\n            value={\n              componentPropsState['ui:column']\n                ? componentPropsState['ui:column']\n                : ''\n            }\n            placeholder='Column size'\n            key='ui:column'\n            type='number'\n            min={0}\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              setComponentProps({\n                ...componentPropsState,\n                'ui:column': ev.target.value,\n              });\n            }}\n            className='card-modal-text'\n          />\n        </div>\n        <DependencyField\n          parameters={(componentPropsState: { [string]: any })}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color='primary'\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n            setComponentProps(componentProps);\n          }}\n          color='secondary'\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { getCardBody } from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\n\n// specify the inputs required for any type of object\nexport default function GeneralParameterInputs({\n  category,\n  parameters,\n  onChange,\n  mods,\n  allFormInputs,\n}: {\n  category: string,\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n}): Node {\n  const CardBody = getCardBody(category, allFormInputs);\n  return (\n    <div>\n      <CardBody parameters={parameters} onChange={onChange} mods={mods || {}} />\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input, FormGroup, FormFeedback } from 'reactstrap';\nimport classnames from 'classnames';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n  subtractArray,\n  getRandomId,\n} from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n  showObjectNameInput?: boolean,\n}): Node {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [keyError, setKeyError] = React.useState(null);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description,\n  );\n  const [elementId] = React.useState(getRandomId());\n  const categoryMap = categoryToNameMap(parameters.category, allFormInputs);\n\n  const fetchLabel = (labelName: string, defaultLabel: string): string => {\n    return mods && mods.labels && typeof mods.labels[labelName] === 'string'\n      ? mods.labels[labelName]\n      : defaultLabel;\n  };\n\n  const objectNameLabel = fetchLabel('objectNameLabel', 'Object Name');\n  const displayNameLabel = fetchLabel('displayNameLabel', 'Display Name');\n  const descriptionLabel = fetchLabel('descriptionLabel', 'Description');\n  const inputTypeLabel = fetchLabel('inputTypeLabel', 'Input Type');\n\n  const availableInputTypes = () => {\n    const definitionsInSchema =\n      parameters.definitionData &&\n      Object.keys(parameters.definitionData).length !== 0;\n\n    // Hide the \"Reference\" option if there are no definitions in the schema\n    let inputKeys = Object.keys(categoryMap).filter(\n      (key) => key !== 'ref' || definitionsInSchema,\n    );\n    // Exclude hidden inputs based on mods\n    if (mods) inputKeys = subtractArray(inputKeys, mods.deactivatedFormInputs);\n\n    return inputKeys\n      .map((key) => ({ value: key, label: categoryMap[key] }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  };\n\n  return (\n    <React.Fragment>\n      <div className='card-entry-row'>\n        {showObjectNameInput && (\n          <div className='card-entry'>\n            <h5>\n              {`${objectNameLabel} `}\n              <Tooltip\n                text={\n                  mods &&\n                  mods.tooltipDescriptions &&\n                  typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                    ? mods.tooltipDescriptions.cardObjectName\n                    : 'The back-end name of the object'\n                }\n                id={`${elementId}_nameinfo`}\n                type='help'\n              />\n            </h5>\n\n            <FormGroup>\n              <Input\n                invalid={keyError !== null}\n                value={keyState || ''}\n                placeholder='Key'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  setKeyState(ev.target.value)\n                }\n                onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                  const { value } = ev.target;\n                  if (\n                    value === parameters.name ||\n                    !(\n                      parameters.neighborNames &&\n                      parameters.neighborNames.includes(value)\n                    )\n                  ) {\n                    setKeyError(null);\n                    onChange({\n                      ...parameters,\n                      name: value,\n                    });\n                  } else {\n                    setKeyState(parameters.name);\n                    setKeyError(`\"${value}\" is already in use.`);\n                    onChange({ ...parameters });\n                  }\n                }}\n                className='card-text'\n              />\n              <FormFeedback>{keyError}</FormFeedback>\n            </FormGroup>\n          </div>\n        )}\n        <div\n          className={`card-entry ${\n            parameters.$ref === undefined ? '' : 'disabled-input'\n          }`}\n        >\n          <h5>\n            {`${displayNameLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDisplayName === 'string'\n                  ? mods.tooltipDescriptions.cardDisplayName\n                  : 'The user-facing name of this object'\n              }\n              id={`${elementId}-titleinfo`}\n              type='help'\n            />\n          </h5>\n          <Input\n            value={titleState || ''}\n            placeholder='Title'\n            type='text'\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n              setTitleState(ev.target.value)\n            }\n            onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              onChange({ ...parameters, title: ev.target.value });\n            }}\n            className='card-text'\n          />\n        </div>\n      </div>\n      <div className='card-entry-row'>\n        <div\n          className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}\n        >\n          <h5>\n            {`${descriptionLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDescription === 'string'\n                  ? mods.tooltipDescriptions.cardDescription\n                  : 'This will appear as help text on the form'\n              }\n              id={`${elementId}-descriptioninfo`}\n              type='help'\n            />\n          </h5>\n          <FormGroup>\n            <Input\n              value={descriptionState || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                setDescriptionState(ev.target.value)\n              }\n              onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                onChange({ ...parameters, description: ev.target.value });\n              }}\n              className='card-text'\n            />\n          </FormGroup>\n        </div>\n        <div\n          className={classnames('card-entry', {\n            'wide-card-entry': !showObjectNameInput,\n          })}\n        >\n          <h5>\n            {`${inputTypeLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardInputType === 'string'\n                  ? mods.tooltipDescriptions.cardInputType\n                  : 'The type of form input displayed on the form'\n              }\n              id={`${elementId}-inputinfo`}\n              type='help'\n            />\n          </h5>\n          <Select\n            value={{\n              value: parameters.category,\n              label: categoryMap[parameters.category],\n            }}\n            placeholder={inputTypeLabel}\n            options={availableInputTypes()}\n            onChange={(val: any) => {\n              // figure out the new 'type'\n              const newCategory = val.value;\n\n              const newProps = {\n                ...defaultUiProps(newCategory, allFormInputs),\n                ...defaultDataProps(newCategory, allFormInputs),\n                name: parameters.name,\n                required: parameters.required,\n              };\n              if (newProps.$ref !== undefined && !newProps.$ref) {\n                // assign an initial reference\n                const firstDefinition = Object.keys(\n                  parameters.definitionData,\n                )[0];\n                newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n              }\n              onChange({\n                ...newProps,\n                title: newProps.title || parameters.title,\n                default: newProps.default || '',\n                type: newProps.type || categoryType(newCategory, allFormInputs),\n                category: newProps.category || newCategory,\n              });\n            }}\n            className='card-select'\n          />\n        </div>\n      </div>\n\n      <div className='card-category-options'>\n        <GeneralParameterInputs\n          category={parameters.category}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n          allFormInputs={allFormInputs}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport {\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledTooltip,\n  Button,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport FBRadioGroup from './radio/FBRadioGroup';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  addDetails: {\n    '& .popover': {\n      width: '300px',\n      'z-index': '1051 !important',\n      '& .popover-inner': {\n        border: '1px solid #1d71ad',\n        borderRadius: '4px',\n        '& .popover-header': { borderBottom: '1px solid #1d71ad' },\n        '& .action-buttons': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '.5em',\n        },\n      },\n    },\n  },\n});\n\nexport default function Add({\n  addElem,\n  hidden,\n  tooltipDescription,\n}: {\n  addElem: (choice: string) => void,\n  hidden?: boolean,\n  tooltipDescription?: string,\n}): Node {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [createChoice, setCreateChoice] = useState('card');\n  const [elementId] = useState(getRandomId());\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <span id={`${elementId}_add`}>\n        <FontAwesomeIcon\n          icon={faPlusSquare}\n          onClick={() => setPopoverOpen(true)}\n        />\n      </span>\n      <UncontrolledTooltip placement='top' target={`${elementId}_add`}>\n        {tooltipDescription || 'Create new form element'}\n      </UncontrolledTooltip>\n      <Popover\n        placement='bottom'\n        target={`${elementId}_add`}\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(false)}\n        className={`add-details ${classes.addDetails}`}\n        id={`${elementId}_add_popover`}\n      >\n        <PopoverHeader>Create New</PopoverHeader>\n        <PopoverBody>\n          <FBRadioGroup\n            className='choose-create'\n            defaultValue={createChoice}\n            horizontal={false}\n            options={[\n              {\n                value: 'card',\n                label: 'Form element',\n              },\n              {\n                value: 'section',\n                label: 'Form section',\n              },\n            ]}\n            onChange={(selection) => {\n              setCreateChoice(selection);\n            }}\n          />\n          <div className='action-buttons'>\n            <Button onClick={() => setPopoverOpen(false)} color='secondary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                setPopoverOpen(false);\n              }}\n              color='primary'\n            >\n              Create\n            </Button>\n          </div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport Tooltip from './Tooltip';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n    },\n    '& .card-entry-row': {\n      display: 'flex',\n    },\n    '& .card-entry': {\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n      '&.wide-card-entry': {\n        width: '100%',\n      },\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-array': {\n      '& .fa-plus-square, & .fa-square-plus': { display: 'none' },\n      '& .section-entries': {\n        '& .fa-plus-square, & .fa-square-plus': { display: 'initial' },\n      },\n    },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'lightGray',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0 0 .5em 0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& .fa': { cursor: 'pointer' },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': {\n      marginRight: '1em',\n      borderRadius: '4px',\n      padding: '.25em',\n      height: '25px',\n      width: '25px',\n    },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  componentProps: {\n    [string]: string | number | boolean | Array<string | number>,\n    path: string,\n  },\n  onChange: ({ [string]: any }) => void,\n  onDelete?: () => void,\n  onMoveUp?: () => void,\n  onMoveDown?: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n  showObjectNameInput?: boolean,\n}): Node {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${(componentProps.parent: any)}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${(componentProps.$ref: any)}`}\n                  id={`${elementId}_refinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={(componentProps: any)}\n            onChange={onChange}\n            allFormInputs={allFormInputs}\n            mods={mods}\n            showObjectNameInput={showObjectNameInput}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <span id={`${elementId}_editinfo`}>\n            <FontAwesomeIcon\n              icon={faPencilAlt}\n              onClick={() => setModalOpen(true)}\n            />\n          </span>\n          <UncontrolledTooltip placement='top' target={`${elementId}_editinfo`}>\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <span id={`${elementId}_trashinfo`}>\n            <FontAwesomeIcon icon={faTrash} onClick={onDelete || (() => {})} />\n          </span>\n          <UncontrolledTooltip\n            placement='top'\n            target={`${elementId}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label='Required'\n            id={`${elementId}_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: {\n            [string]: string | number | boolean | Array<string | number>,\n          }) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\nimport type { Parameters, FormInput } from '../types';\n\nconst useStyles = createUseStyles({\n  hidden: {\n    display: 'none',\n  },\n});\n\n// specify the inputs required for a string type object\nexport function CardDefaultParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  return <div />;\n}\n\nconst getInputCardBodyComponent = ({ type }: { type: string }) =>\n  function InputCardBodyComponent({\n    parameters,\n    onChange,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }) {\n    return (\n      <React.Fragment>\n        <h5>Default value</h5>\n        <Input\n          value={parameters.default || ''}\n          placeholder='Default'\n          type={type}\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            onChange({ ...parameters, default: ev.target.value })\n          }\n          className='card-text'\n        />\n      </React.Fragment>\n    );\n  };\n\nfunction Checkbox({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className='card-boolean'>\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label='Default'\n      />\n    </div>\n  );\n}\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const classes = useStyles();\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => isNaN(val));\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString,\n  );\n  const [elementId] = React.useState(getRandomId());\n  return (\n    <div className='card-enum'>\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label='Display label is different from value'\n        id={`${elementId}_different`}\n      />\n      <div\n        className={\n          containsUnparsableString || !enumArray.length ? classes.hidden : ''\n        }\n      >\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString || !isNumber) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val) || 0;\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val || 0}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label='Force number'\n          id={`${elementId}_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nconst defaultInputs: { [string]: FormInput } = {\n  dateTime: {\n    displayName: 'Date-Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'datetime-local' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  date: {\n    displayName: 'Date',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'date' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'time' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default defaultInputs;\n","// @flow\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport {\n  Alert,\n  Input,\n  UncontrolledTooltip,\n  FormGroup,\n  FormFeedback,\n} from 'reactstrap';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/defaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport Card from './Card';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\nimport type { FormInput, Mods } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      display: 'flex',\n      borderBottom: '1px solid gray',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n      },\n      '& .section-entry': {\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid gray',\n      paddingTop: '1em',\n      '& .fa': {\n        marginRight: '1em',\n        borderRadius: '4px',\n        padding: '0.25em',\n        height: '25px',\n        width: '25px',\n      },\n      '& .fa-pencil-alt, &.fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  neighborNames,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  categoryHash,\n}: {\n  name: string,\n  required: boolean,\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: (\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    ref?: string,\n  ) => void,\n  onNameChange: (string) => void,\n  onDependentsChange: (\n    Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n  ) => void,\n  onRequireToggle: () => any,\n  onDelete: () => any,\n  onMoveUp?: () => any,\n  onMoveDown?: () => any,\n  path: string,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  hideKey?: boolean,\n  reference?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  dependent?: boolean,\n  parent?: string,\n  neighborNames?: Array<string>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}): Node {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    allFormInputs,\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  const [keyError, setKeyError] = React.useState(null);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className='section-head'>\n            {reference ? (\n              <div className='section-entry section-reference'>\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder='Reference'\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className='section-select'\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className='section-entry' data-test='section-object-name'>\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionObjectName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionObjectName\n                      : 'The key to the object that will represent this form section.'\n                  }\n                  id={`${elementId}_nameinfo`}\n                  type='help'\n                />\n              </h5>\n              <FormGroup>\n                <Input\n                  invalid={keyError !== null}\n                  value={keyName || ''}\n                  placeholder='Key'\n                  type='text'\n                  onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                    setKeyName(ev.target.value)\n                  }\n                  onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                    const { value } = ev.target;\n                    if (\n                      value === name ||\n                      !(neighborNames && neighborNames.includes(value))\n                    ) {\n                      setKeyError(null);\n                      onNameChange(value);\n                    } else {\n                      setKeyName(name);\n                      setKeyError(`\"${value}\" is already in use.`);\n                      onNameChange(name);\n                    }\n                  }}\n                  className='card-text'\n                  readOnly={hideKey}\n                />\n                <FormFeedback>{keyError}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className='section-entry' data-test='section-display-name'>\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDisplayName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDisplayName\n                      : 'The name of the form section that will be shown to users of the form.'\n                  }\n                  id={`${elementId}_titleinfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder='Title'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <div className='section-entry' data-test='section-description'>\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDescription ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDescription\n                      : 'A description of the section which will be visible on the form.'\n                  }\n                  id={`${elementId}_descriptioninfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder='Description'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color='warning'\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${elementId}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className='section-body'>\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n              className='section-body'\n            >\n              <Droppable droppableId='droppable'>\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      allFormInputs,\n                      mods,\n                      categoryHash,\n                      Card,\n                      Section,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className='section-footer'>\n            <Add\n              tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n              addElem={(choice: string) => {\n                if (choice === 'card') {\n                  addCardObj({\n                    schema,\n                    uischema,\n                    mods,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                } else if (choice === 'section') {\n                  addSectionObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                }\n              }}\n              hidden={\n                schemaData.properties &&\n                Object.keys(schemaData.properties).length !== 0\n              }\n            />\n          </div>\n          <div className='section-interactions'>\n            <span id={`${elementId}_editinfo`}>\n              <FontAwesomeIcon\n                icon={faPencilAlt}\n                onClick={() => setModalOpen(true)}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_editinfo`}\n            >\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <span id={`${elementId}_trashinfo`}>\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => (onDelete ? onDelete() : {})}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_trashinfo`}\n            >\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label='Required'\n              id={`${elementId}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n            'ui:column': uischema['ui:column'] ?? '',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n            onChange(schema, {\n              ...uischema,\n              'ui:column': newComponentProps['ui:column'],\n            });\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\n\nexport const arrows = {\n  '& .arrows': {\n    float: 'right',\n    '& .fa-arrow-up, & .fa-arrow-down': {\n      'border-radius': '4px',\n      padding: '.25em',\n      margin: '0 .5em 0 0',\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n      height: '28px',\n      width: '28px',\n    },\n  },\n};\n","// @flow\n\nimport React, { useState } from 'react';\nimport type { Node } from 'react';\nimport type { Parameters } from '../types';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport { Input } from 'reactstrap';\n\nexport function PlaceholderInput({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <h4>\n        Placeholder{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-placeholder'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_placeholder`}\n            type='help'\n            text='Hint to the user as to what kind of information is expected in the field'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:placeholder']}\n        placeholder='Placeholder'\n        key='placeholder'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            'ui:placeholder': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nconst formatDictionary = {\n  '': 'None',\n  email: 'Email',\n  hostname: 'Hostname',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\nconst formatTypeDictionary = {\n  email: 'email',\n  url: 'uri',\n};\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\n// specify the inputs required for a string type object\nfunction CardShortAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${elementId}_format`}\n          type='help'\n          text='Require string input to match a certain common format'\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Format'\n        key='format'\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_autocomplete`}\n            type='help'\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Auto Complete'\n        key='ui:autocomplete'\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <h4>\n        Column Size{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_column_size`}\n            type='help'\n            text='Set the column size of the input'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:column'] ? parameters['ui:column'] : ''}\n        placeholder='Column size'\n        key='ui:column'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            'ui:column': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction ShortAnswerField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type={formatTypeDictionary[parameters.format] || 'text'}\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Password({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='password'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n}\n\nconst shortAnswerInput: { [string]: FormInput } = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n      ...['email', 'hostname', 'uri', 'regex'].map((format) => ({\n        types: ['string'],\n        format,\n      })),\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default shortAnswerInput;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\n// specify the inputs required for a string type object\nfunction CardLongAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'>\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction LongAnswer({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='textarea'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-textarea'\n      />\n    </React.Fragment>\n  );\n}\n\nconst longAnswerInput: { [string]: FormInput } = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs,\n  },\n};\n\nexport default longAnswerInput;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\n\n// specify the inputs required for a number type object\nfunction CardNumberParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${elementId}_multiple`}\n          type='help'\n          text='Require number to be a multiple of this number'\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder='ex: 2'\n        key='multipleOf'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder='ex: 3'\n        key='minimum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMinimum'\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label='Exclusive Minimum'\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder='ex: 8'\n        key='maximum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMaximum'\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label='Exclusive Maximum'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction NumberField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className='card-number'\n      />\n    </React.Fragment>\n  );\n}\n\nconst numberInputs: { [string]: FormInput } = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default numberInputs;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  excludeKeys,\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport Card from '../Card';\nimport Section from '../Section';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport defaultInputs from './defaultInputs';\nimport { getRandomId } from '../utils';\nimport type { CardBody, Parameters, Mods, FormInput } from '../types';\n\n// specify the inputs required for a string type object\nfunction CardArrayParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: ({ [string]: any }) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder='ex: 2'\n        key='minimum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder='ex: 2'\n        key='maximum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n    </div>\n  );\n}\n\nfunction getInnerCardComponent({\n  defaultFormInputs,\n}: {\n  defaultFormInputs: { [string]: FormInput },\n}): CardBody {\n  return function InnerCard({\n    parameters,\n    onChange,\n    mods,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n    mods?: Mods,\n  }) {\n    const [elementId] = useState(getRandomId);\n    const newDataProps = {};\n    const newUiProps = {};\n    const allFormInputs = excludeKeys(\n      Object.assign(\n        {},\n        defaultFormInputs,\n        (mods && mods.customFormInputs) || {},\n      ),\n      mods && mods.deactivatedFormInputs,\n    );\n\n    // parse components into data and ui relevant pieces\n    Object.keys(parameters).forEach((propName) => {\n      if (propName.startsWith('ui:*')) {\n        newUiProps[propName.substring(4)] = parameters[propName];\n      } else if (propName.startsWith('ui:')) {\n        newUiProps[propName] = parameters[propName];\n      } else if (!['name', 'required'].includes(propName)) {\n        newDataProps[propName] = parameters[propName];\n      }\n    });\n\n    const definitionData = parameters.definitionData\n      ? parameters.definitionData\n      : {};\n    const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n    const [cardOpen, setCardOpen] = React.useState(false);\n    if (parameters.type !== 'array') {\n      return <h4>Not an array </h4>;\n    }\n    return (\n      <div className='card-array'>\n        <FBCheckbox\n          onChangeValue={() => {\n            if (newDataProps.items.type === 'object') {\n              onChange({\n                ...parameters,\n                items: {\n                  ...newDataProps.items,\n                  type: 'string',\n                },\n              });\n            } else {\n              onChange({\n                ...parameters,\n                items: {\n                  ...newDataProps.items,\n                  type: 'object',\n                },\n              });\n            }\n          }}\n          isChecked={newDataProps.items.type === 'object'}\n          label='Section'\n          id={`${elementId}_issection`}\n        />\n        {generateElementComponentsFromSchemas({\n          schemaData: { properties: { item: newDataProps.items } },\n          uiSchemaData: { item: newUiProps.items },\n          onChange: (schema, uischema) => {\n            onChange({\n              ...parameters,\n              items: schema.properties.item,\n              'ui:*items': uischema.item || {},\n            });\n          },\n          path: elementId,\n          definitionData,\n          definitionUi,\n          hideKey: true,\n          cardOpenArray: [cardOpen],\n          setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n          allFormInputs,\n          mods,\n          categoryHash: generateCategoryHash(allFormInputs),\n          Card: (props) => <Card {...props} showObjectNameInput={false} />,\n          Section,\n        })}\n      </div>\n    );\n  };\n}\n\nconst defaultFormInputs = ({\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n}: { [string]: FormInput });\ndefaultFormInputs.array = {\n  displayName: 'Array',\n  matchIf: [\n    {\n      types: ['array'],\n    },\n  ],\n  defaultDataSchema: {\n    items: { type: 'string' },\n  },\n  defaultUiSchema: {},\n  type: 'array',\n  cardBody: getInnerCardComponent({ defaultFormInputs }),\n  modalBody: CardArrayParameterInputs,\n};\n\nconst ArrayInputs: { [string]: FormInput } = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: getInnerCardComponent({ defaultFormInputs }),\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","// @flow\n\nimport type { FormInput, Parameters } from '../types';\nimport Select from 'react-select';\nimport React from 'react';\nimport type { Node } from 'react';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nexport function CardReferenceParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  return (\n    <div>\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n    </div>\n  );\n}\n\nfunction RefChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const pathArr = (parameters.$ref || '').split('/');\n  const currentValueLabel =\n    pathArr.length === 3 &&\n    pathArr[0] === '#' &&\n    pathArr[1] === 'definitions' &&\n    (parameters.definitionData || {})[pathArr[2]]\n      ? parameters.definitionData[pathArr[2]].title || parameters.$ref\n      : parameters.$ref;\n\n  return (\n    <div className='card-select'>\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: currentValueLabel,\n        }}\n        placeholder='Reference'\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label: parameters.definitionData[key].title || `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className='card-select'\n      />\n    </div>\n  );\n}\n\nconst referenceInputs: { [string]: FormInput } = {\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: ['null'],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n      title: '',\n      description: '',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: RefChoice,\n    modalBody: CardReferenceParameterInputs,\n  },\n};\n\nexport default referenceInputs;\n","// @flow\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport arrayInputs from './arrayInputs';\nimport defaultInputs from './defaultInputs';\nimport referenceInputs from './referenceInputs';\nimport type { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS = ({\n  ...defaultInputs,\n  ...referenceInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n  ...arrayInputs,\n}: { [string]: FormInput });\n\nexport default DEFAULT_FORM_INPUTS;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport { arrows as arrowsStyle } from './styles';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square, & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    ...arrowsStyle,\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-container:hover': { border: '1px solid green' },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .fa': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'gray',\n      '& div::before': { backgroundColor: 'lightGray' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'lightGray' },\n      '& input:focus': {\n        backgroundColor: 'lightGray',\n        border: '1px solid gray',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onChange,\n  mods,\n  className,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  mods?: Mods,\n  className?: string,\n}): Node {\n  const classes = useStyles();\n  const schemaData = (parse(schema): { [string]: any }) || {};\n  schemaData.type = 'object';\n  const uiSchemaData = (parse(uischema): { [string]: any }) || {};\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    allFormInputs,\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color='warning'\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      {(!mods || mods.showFormHead !== false) && (\n        <div className={classes.formHead} data-test='form-head'>\n          <div>\n            <h5 data-test='form-name-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formNameLabel === 'string'\n                ? mods.labels.formNameLabel\n                : 'Form Name'}\n            </h5>\n            <Input\n              value={schemaData.title || ''}\n              placeholder='Title'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    title: ev.target.value,\n                  }),\n                  uischema,\n                );\n              }}\n              className='form-title'\n            />\n          </div>\n          <div>\n            <h5 data-test='form-description-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formDescriptionLabel === 'string'\n                ? mods.labels.formDescriptionLabel\n                : 'Form Description'}\n            </h5>\n            <Input\n              value={schemaData.description || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    description: ev.target.value,\n                  }),\n                  uischema,\n                )\n              }\n              className='form-description'\n            />\n          </div>\n        </div>\n      )}\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(stringify(newSchema), stringify(newUiSchema)),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n          className='form-body'\n        >\n          <Droppable droppableId='droppable'>\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(stringify(newSchema), stringify(newUiSchema)),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  allFormInputs,\n                  mods,\n                  categoryHash,\n                  Card,\n                  Section,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                mods: mods,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(stringify(newSchema), stringify(newUiSchema)),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(stringify(newSchema), stringify(newUiSchema)),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            schemaData.properties &&\n            Object.keys(schemaData.properties).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: {\n  definitionSchema: { [string]: any },\n  definitionUiSchema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}): Node {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const allFormInputs = Object.assign(\n    {},\n    DEFAULT_FORM_INPUTS,\n    (mods && mods.customFormInputs) || {},\n  );\n  const componentArr = generateElementComponentsFromSchemas({\n    schemaData: { properties: definitionSchema },\n    uiSchemaData: definitionUiSchema,\n    onChange: (newDefinitions, newDefinitionUis) => {\n      const oldUi = newDefinitionUis;\n      const newUi = {};\n\n      Object.keys(oldUi).forEach((definedUi) => {\n        if (!['definitions', 'ui:order'].includes(definedUi))\n          newUi[definedUi] = oldUi[definedUi];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    path: 'definitions',\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  }).map((element: any) => (\n    <div\n      key={typeof element.key === 'string' ? element.key : ''}\n      className='form_gallery_container'\n    >\n      {element}\n    </div>\n  ));\n\n  return (\n    <div className='form_gallery'>\n      {componentArr}\n      {componentArr.length === 0 && <h5>No components in \"definitions\"</h5>}\n      <div className='form_footer'>\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                mods: mods,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            !!definitionSchema && Object.keys(definitionSchema).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport { arrows as arrowsStyle } from './styles';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    flexDirection: 'column',\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    ...arrowsStyle,\n    '& .form_footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n    },\n    '& .fa-plus-square & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': { border: '1px dashed gray' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid green' },\n  },\n});\n\nexport default function PredefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  mods,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  mods?: Mods,\n}): Node {\n  const classes = useStyles();\n  const schemaData = React.useMemo(\n    () => (parse(schema): { [string]: any }) || {},\n    [schema],\n  );\n  const uiSchemaData = React.useMemo(\n    () => (parse(uischema): { [string]: any }) || {},\n    [uischema],\n  );\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name, schemaObject) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n      if (!Object.keys(uiSchemaData.definitions).length) {\n        uiSchemaData.definitions = undefined;\n      }\n      onChange(stringify(schemaData), stringify(uiSchemaData));\n    }\n  }, [uiSchemaData, schemaData, onChange]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions || {}}\n        definitionUiSchema={uiSchemaData.definitions || {}}\n        onChange={(\n          newDefinitions: { [string]: any },\n          newDefinitionsUi: { [string]: any },\n        ) => {\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            { ...schemaData, definitions: newDefinitions },\n            { ...uiSchemaData, definitions: newDefinitionsUi },\n            (newSchema, newUiSchema) =>\n              onChange(stringify(newSchema), stringify(newUiSchema)),\n            categoryHash,\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n"],"names":["useStyles","createUseStyles","checkbox","display","marginRight","FBCheckbox","_ref","onChangeValue","_ref$value","value","_ref$isChecked","isChecked","_ref$label","label","_ref$use","use","_ref$disabled","disabled","_ref$id","id","_ref$dataTest","dataTest","_ref$labelClassName","labelClassName","classjss","classes","classnames","potentialCheckboxId","checkboxId","React","createElement","className","type","undefined","onChange","checked","htmlFor","FontAwesomeIcon","otherProps","_objectWithoutPropertiesLoose","_excluded","props","Object","assign","FortAwesomeFontAwesomeIcon","collapseElement","cursor","marginTop","padding","fontSize","marginLeft","Collapse","disableToggle","onClick","toggleCollapse","icon","isOpen","faCaretDown","faCaretRight","title","RSCollapse","children","FBRadioButton","name","required","autoFocus","_useState","useState","Math","floor","random","key","radio","marginBottom","height","verticalAlign","FBRadioGroup","options","defaultValue","horizontal","toString","map","option","index","typeMap","alert","faAsterisk","help","faQuestionCircle","toolTip","color","Example","text","Fragment","style","textDecoration","href","UncontrolledTooltip","autohide","placement","target","parse","JSON","stringify","obj","defaultDataProps","category","allFormInputs","defaultDataSchema","defaultUiProps","defaultUiSchema","categoryType","getCardBody","cardBody","categoryToNameMap","categoryNameMap","keys","forEach","inputName","displayName","updateElementNames","elementArray","elementNames","elem","newElem","neighborNames","generateCategoryHash","categoryHash","categoryName","formInput","matchIf","match","types","hash","widget","field","format","$ref","Error","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","console","error","supportedPropertyParameters","Set","supportedUiParameters","checkObjectForUnsupportedFeatures","schema","uischema","supportedWidgets","supportedFields","supportedOptions","unsupportedFeatures","property","has","push","uiProperty","propDefined","properties","includes","dependencies","dependencyKey","parameter","oneOf","grouping","entries","element","uiProp","uiOption","checkForUnsupportedFeatures","widgets","fields","inputType","possibleOptions","Array","isArray","apply","generateDependencyElement","dataProps","uiProperties","requiredNames","definitionData","definitionUi","useDefinitionDetails","uiProps","_extends","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","parameters","elementDict","_ref2","startsWith","parent","group","possibilityIndex","possibility","dependents","requiredValues","_ref3","length","dependent","_ref4","cardPropList","remainder","remCard","countElementsFromSchema","schemaData","elementCount","_ref5","_ref6","_ref7","generateSchemaElementFromElement","_element$schema","_element$schema$requi","description","returnElement","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","add","elementName","_extends2","childrenComponents","child","filter","_ref8","_ref9","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","substring","getCardParameterInputComponentForType","modalBody","updateSchemas","newUiSchema","DEFAULT_INPUT_NAME","getIdFromElementsBlock","elements","names","defaultNameLength","max","Number","parseInt","isNaN","addCardObj","mods","newElementObjArr","i","getNewElementDefaultDataOptions","newElementDefaultUiSchema","splice","addSectionObj","generateElementComponentsFromSchemas","uiSchemaData","hideKey","path","cardOpenArray","setCardOpenArray","Card","Section","elementPropArr","elementList","elementProp","expanded","TypeSpecificParameters","componentProps","newCardObj","newDataProps","newUiProps","propName","oldElement","onDelete","concat","slice","onMoveUp","tempBlock","onMoveDown","addElem","choice","cardOpen","setCardOpen","newState","newRef","oldSection","onNameChange","newName","onRequireToggle","onDependentsChange","newDependents","reference","onDragEnd","result","details","src","source","dest","destination","propagateElementChange","updatedElementArr","childrenElements","updatedChildren","propagateDefinitionChanges","bodyElements","updatedBodyElements","subtractArray","array1","array2","reduce","acc","curr","v","excludeKeys","keysHash","_extends3","newElementDefaultDataOptions","getRandomId","chars","numberOfChars","randomIdLength","from","join","DependencyWarning","elementId","definedVals","val","undefinedVals","Tooltip","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","faTimes","Select","cardEnumOption","width","flexDirection","justifyContent","CardEnumOptions","initialValues","showNames","possibleValues","_loop","Input","ev","newVal","parseFloat","isInteger","faPlus","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","combination","string","oldCombo","number","array","_extends4","object","_extends5","newCase","propArr","newEnum","DependencyPossibility","newPossibility","dependencyField","textAlign","border","borderRadius","margin","checkIfValueBasedDependency","valueBased","DependencyField","selection","cardModal","paddingTop","paddingBottom","CardModal","onClose","_React$useState","componentPropsState","setComponentProps","useEffect","Modal","ModalHeader","ModalBody","rel","min","ModalFooter","Button","GeneralParameterInputs","CardBody","CardGeneralParameterInputs","_ref$showObjectNameIn","showObjectNameInput","keyState","setKeyState","_React$useState2","keyError","setKeyError","_React$useState3","titleState","setTitleState","_React$useState4","descriptionState","setDescriptionState","_React$useState5","categoryMap","fetchLabel","labelName","defaultLabel","labels","objectNameLabel","displayNameLabel","descriptionLabel","inputTypeLabel","availableInputTypes","definitionsInSchema","inputKeys","deactivatedFormInputs","sort","a","b","localeCompare","tooltipDescriptions","cardObjectName","FormGroup","invalid","onBlur","FormFeedback","cardDisplayName","cardDescription","cardInputType","newCategory","newProps","firstDefinition","addDetails","borderBottom","Add","hidden","tooltipDescription","popoverOpen","setPopoverOpen","_useState2","createChoice","setCreateChoice","_useState3","faPlusSquare","Popover","toggle","PopoverHeader","PopoverBody","cardEntries","backgroundColor","fontWeight","cardInteractions","modalOpen","setModalOpen","faArrowUp","faArrowDown","faPencilAlt","faTrash","newComponentProps","CardDefaultParameterInputs","getInputCardBodyComponent","InputCardBodyComponent","Checkbox","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","defaultInputs","dateTime","date","time","dropdown","sectionContainer","borderTop","_uischema$uiColumn","elementNum","defaultCollapseStates","keyName","setKeyName","cardSectionObjectName","readOnly","cardSectionDisplayName","cardSectionDescription","Alert","message","DragDropContext","Droppable","droppableId","providedDroppable","ref","innerRef","droppableProps","Draggable","draggableId","providedDraggable","draggableProps","dragHandleProps","arrows","PlaceholderInput","formatDictionary","email","hostname","uri","regex","formatTypeDictionary","url","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","pattern","ShortAnswerField","Password","shortAnswerInput","shortAnswer","CardLongAnswerParameterInputs","LongAnswer","longAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","numberInputs","integer","CardArrayParameterInputs","minItems","maxItems","getInnerCardComponent","defaultFormInputs","InnerCard","customFormInputs","items","item","newArr","_Card","shortAnswerInputs","longAnswerInputs","ArrayInputs","CardReferenceParameterInputs","RefChoice","currentValueLabel","referenceInputs","DEFAULT_FORM_INPUTS","arrayInputs","formBuilder","arrowsStyle","formHead","formBody","maxHeight","overflowY","formFooter","FormBuilder","showFormHead","formNameLabel","formDescriptionLabel","CardGallery","definitionSchema","definitionUiSchema","componentArr","newDefinitions","newDefinitionUis","oldUi","newUi","definedUi","definedUiSchemaKey","preDefinedGallery","PredefinedGallery","useMemo","log","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi"],"mappings":"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"}